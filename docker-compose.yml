
services:
  web:
    build: .
    ports:
      - "8000:8000"
      - "3001:3001"
    environment:
      FLASK_APP: application
      FLASK_ENV: development
    depends_on:
      - postgres
      - mongodb
      - redis
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-music_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-music_password}
      POSTGRES_DB: ${POSTGRES_DB:-music_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-music_user} -d ${POSTGRES_DB:-music_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-music_user}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-music_password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-music_db}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-music_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data:
  redis_data: